{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,S,0GASIC,EAAW,IAAIC,eAAe,aAAc,CAC9CC,aAAc,MACdC,aAAc,MAGVC,EAAS,CACbC,KAAM,EACNC,SAAU,GACVC,EAAG,IAEDC,EAAgB,EASM,SAAjBC,IACP,IAAMC,EAAeC,OAAOC,YACtBC,EAAYF,OAAOG,QACZC,EAAAC,KAAKC,QAAQC,aACfL,EAZQ,IAYmBH,IAqBtCN,EAAOC,OACPc,I,CAqBsB,SAAfC,EAAcC,GACrBN,EAAAC,KAAKC,QAAQK,mBAAmB,aAAa,EAAAC,EAAAC,eAAcH,G,UAG9CF,I,OAAAM,EAASC,MAAAC,KAAAC,U,UAATH,I,OAAAA,EAAfI,EAAA/B,EAAA,CAAA+B,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EAQEC,EACAC,EACAC,E,yEAVFH,EAAY,IAAII,gBAAgBR,EAAAS,EAAA,IACjClC,EAAM,CACTmC,WAAY,QACZC,YAAa,aACbC,QAAQ,EACRC,IAAK3B,EAAA4B,IAAIC,O,kBAGcf,EAAAgB,GAAMC,IAAI,GAAmBC,OAAhBhC,EAAA4B,IAAIK,SAAS,KAAaD,OAAVd,I,UAA9CC,EAAQe,EAAAC,KACRf,EAAWD,EAASiB,KAAKC,KAAKC,OAC9BjB,EAAYF,EAASiB,KAAKf,YAEd,IAAdD,EAAoC,IAAhB/B,EAAOC,MAAW,C,uBACxCiD,cAAc9C,GACdqB,EAAA0B,GAASC,OAAOC,QACd,4E,2BAKgB,IAAhBrD,EAAOC,MACTwB,EAAA0B,GAASC,OAAOE,QAAQ,oBAA8BX,OAAVX,EAAU,aAGxDhB,EAAcc,EAASiB,KAAKC,MAC5BpD,EAAS2D,UAET5C,EAAAC,KAAK4C,gBAAgBC,YAAc,GAE5Bd,QADJ3C,EAAOC,KAAO,GAAKD,EAAOE,SAAW6B,EACvC,QAAgBY,OAAVX,GAEHhC,EAAOC,KAAOD,EAAOE,UAAY8B,IACnC0B,QAAQC,IAAI,4BACZT,cAAc9C,GACdqB,EAAA0B,GAASC,OAAOQ,QACd,+D,kDAIJF,QAAQC,IAAGd,EAAAgB,I,2DAxCSvC,MAAAC,KAAAC,U,CAzDxBb,EAAAC,KAAKkD,KAAKC,iBAAiB,UAeF,SAAHC,GACpBA,EAAEC,iBACoB,IAAlB7D,IACFsD,QAAQC,IAAI,sBACIT,cAAF9C,IAGhBJ,EAAOC,KAAO,EACdD,EAAOG,EAAI6D,EAAEE,cAAcC,SAASC,YAAYC,MAChD1D,EAAAC,KAAKC,QAAQyD,UAAY,GACzB3D,EAAAC,KAAK4C,gBAAgBC,YAAc,GACnC1C,IACAX,EAAgBmE,YAAYlE,EAAgB,I,IAzB9CE,OAAOwD,iBAAiB,UAAU,EAAAS,EAAAC,WAwCuC,WACvE,IAAMC,EAAW/D,EAAAC,KAAK+D,cAAcC,UAAUC,SAAS,aACjDC,EAAYvE,OAAOG,SAAgC,EAArBH,OAAOC,YACvCsE,EAAYJ,GACd/D,EAAAC,KAAK+D,cAAcC,UAAUG,OAAO,cAEjCD,GAAaJ,GAChB/D,EAAAC,KAAK+D,cAAcC,UAAUI,IAAI,Y,GA/CgB,MACrDrE,EAAAC,KAAK+D,cAAcZ,iBAAiB,SAgCsB,WACxDxD,OAAO0E,OAAO,CACZC,IAAK,EACLC,SAAU,U","sources":["src/js/index2.js"],"sourcesContent":["// імпортуємо бібліотеки\nimport '../css/styles.css';\nimport Notiflix from 'notiflix';\nimport axios from 'axios';\nimport { throttle } from 'lodash';\nimport simpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { refs, api } from './refs'; //імпортую об\"єкт елементів refs і дані api ключ і базовий url\nimport { markUpGallery } from './markup_gallery'; //імпортую об\"єкт для побудови галереї з завантажених даних\n\nvar lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n//Параметри для пагінації\nconst params = {\n  page: 1,\n  per_page: 40,\n  q: '',\n};\nlet timerInterval = 0;\nconst TENDA_SCROLL = 1.3; //коефіцієнт спрацювання підгрузки елементів галереї, від висоти екрана\n// Події\nrefs.form.addEventListener('submit', onSubmitForm);\n// refs.buttonLoadMore.addEventListener('click', onClickButtonLoadMore);\nwindow.addEventListener('scroll', throttle(onScroll, 500));\nrefs.buttonPageTop.addEventListener('click', onClickButtonPageTop);\n\n// функція безперервного скрола\nfunction infiniteScroll() {\n  const heightWindow = window.innerHeight;\n  const positionY = window.scrollY;\n  const maxY = refs.gallery.clientHeight;\n  if (maxY - positionY < TENDA_SCROLL * heightWindow) {\n    onClickButtonLoadMore();\n  }\n}\n// функція-колбек події сабміта +\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  if (timerInterval !== 0) {\n    console.log('перевірка чи треба');\n    clearInterval(timerInterval);\n  }\n\n  params.page = 1;\n  params.q = e.currentTarget.elements.searchQuery.value;\n  refs.gallery.innerHTML = '';\n  refs.outputPagesLoad.textContent = '';\n  fetchData();\n  timerInterval = setInterval(infiniteScroll, 400);\n}\n// функція-колбек для події на кнопці \"load-more\"+\nfunction onClickButtonLoadMore() {\n  params.page++;\n  fetchData();\n}\n// функція-колбек для події на клік на кнопці прокрутки на верх сторінки +\nfunction onClickButtonPageTop() {\n  window.scroll({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n// функція-колбек на подію скрол, добавляє чи ховає кнопку, щоб перейти на початок сторінки+\nfunction onScroll() {\n  const isHidden = refs.buttonPageTop.classList.contains('is-hidden');\n  const isVisible = window.scrollY >= window.innerHeight * 3;\n  if (isVisible & isHidden) {\n    refs.buttonPageTop.classList.remove('is-hidden');\n  }\n  if (!isVisible & !isHidden) {\n    refs.buttonPageTop.classList.add('is-hidden');\n  }\n}\n// функція для рендеру галереї +\nfunction renderGallery(users) {\n  refs.gallery.insertAdjacentHTML('beforeend', markUpGallery(users));\n}\n// fetch\nasync function fetchData() {\n  const parametrs = new URLSearchParams({\n    ...params,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    pretty: true,\n    key: api.KEY,\n  });\n  try {\n    const response = await axios.get(`${api.BASE_URL}?${parametrs}`);\n    const loadHits = response.data.hits.length;\n    const totalHits = response.data.totalHits;\n    // перевірка коли нічого не знаходить при першому запиті від користувача\n    if ((loadHits === 0) & (params.page === 1)) {\n      clearInterval(timerInterval);\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    }\n    // виводить кількість знайдених елементів при кліку на пошук\n    if (params.page === 1) {\n      Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n    }\n\n    renderGallery(response.data.hits);\n    lightbox.refresh();\n\n    refs.outputPagesLoad.textContent = `${\n      (params.page - 1) * params.per_page + loadHits\n    } of ${totalHits}`;\n    // перевірка коли завантажили максимальну кількість елементів\n    if (params.page * params.per_page >= totalHits) {\n      console.log('треба виключити інтервал');\n      clearInterval(timerInterval);\n      Notiflix.Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$b078f35af07a0944$var$lightbox","SimpleLightbox","captionsData","captionDelay","$b078f35af07a0944$var$params","page","per_page","q","$b078f35af07a0944$var$timerInterval","$b078f35af07a0944$var$infiniteScroll","heightWindow","window","innerHeight","positionY","scrollY","$4Nugj","refs","gallery","clientHeight","$b078f35af07a0944$var$fetchData","$b078f35af07a0944$var$renderGallery","users","insertAdjacentHTML","$hCAzH","markUpGallery","$b078f35af07a0944$var$_fetchData","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","parametrs","response","loadHits","totalHits","URLSearchParams","$dDDEV","image_type","orientation","pretty","key","api","KEY","$dIxxU","get","concat","BASE_URL","_ctx","sent","data","hits","length","clearInterval","$iU1Pc","Notify","failure","success","refresh","outputPagesLoad","textContent","console","log","warning","t0","form","addEventListener","e","preventDefault","currentTarget","elements","searchQuery","value","innerHTML","setInterval","$1WSnx","throttle","isHidden","buttonPageTop","classList","contains","isVisible","remove","add","scroll","top","behavior"],"version":3,"file":"task2.6419dbec.js.map"}